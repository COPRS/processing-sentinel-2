# Copyright 2023 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PS2 Docker build (dev branches)

on:
  push:
    branches:
      - 'develop'
      - 'feature/**'
      - 'fix/**'
  workflow_dispatch: { }

env:
  REGISTRY_USER: ${{ secrets.ARTIFACTORY_USER }}
  REGISTRY_PWD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  REGISTRY_BASE: artifactory.coprs.esa-copernicus.eu
  REGISTRY_PROJECT: rs-docker-private
  SONARQUBE_HOST: ${{ secrets.SONARQUBE_HOST }}
  SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up environment
        run: |
          # Sonar
          echo "SONARQUBE_HOST=${{ env.SONARQUBE_HOST }}" >> $GITHUB_ENV
          echo "SONARQUBE_TOKEN=${{ env.SONARQUBE_TOKEN }}" >> $GITHUB_ENV
          
          # Git
          GIT_BRANCH=${{ github.ref_name }}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          echo Building branch : $GIT_BRANCH
          
          # Set project version
          BRANCH_NAME=$(echo $GIT_BRANCH | sed s:/:_:g)
          echo Setting project version : $BRANCH_NAME
          sed -i -E "s/(version = ').*(')/\1$BRANCH_NAME\2/" apps/build.gradle

      - name: Log into registry ${{ env.REGISTRY_BASE }}/${{ env.REGISTRY_PROJECT }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_BASE }}/${{ env.REGISTRY_PROJECT }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PWD }}

      - name: Build base docker images
        run: |
          docker build . -f apps/execution/docker/Dockerfile_s2-ipf-l0u-jdk17 -t s2-ipf-l0u-jdk17
          docker build . -f apps/execution/docker/Dockerfile_s2level0-jdk17 -t s2level0-jdk17
          docker build . -f apps/execution/docker/Dockerfile_s2level1-jdk17 -t s2level1-jdk17
          docker build . -f apps/execution/docker/Dockerfile_s2level2-jdk17 -t s2level2-jdk17

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build sonar bootBuildImage docker

      - name: Push docker images
        run: |
          for IMG in `docker image ls | grep ${{ env.REGISTRY_PROJECT }} | grep 'ew-\|pw-' | awk ' { print $1":"$2 } '`
          do
            docker image push $IMG
          done

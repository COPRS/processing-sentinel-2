
######################## Deployer #################################################################

deployer.*.kubernetes.image-pull-policy=Always
deployer.*.kubernetes.namespace=processing

deployer.*.kubernetes.liveness-probe-delay=10
deployer.*.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.*.kubernetes.liveness-probe-period=60
deployer.*.kubernetes.liveness-probe-port=8080
deployer.*.kubernetes.liveness-probe-timeout=60
deployer.*.kubernetes.readiness-probe-delay=60
deployer.*.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.*.kubernetes.readiness-probe-period=60
deployer.*.kubernetes.readiness-probe-port=8080
deployer.*.kubernetes.readiness-probe-timeout=20
deployer.*.kubernetes.max-terminated-error-restarts=3

deployer.pw-l0u.kubernetes.requests.memory=1000Mi
deployer.pw-l0u.kubernetes.limits.memory=4000Mi
deployer.pw-l0u.kubernetes.requests.cpu=300m
deployer.pw-l0u.kubernetes.limits.cpu=2000m

deployer.ew-l0u.kubernetes.requests.memory=2000Mi
deployer.ew-l0u.kubernetes.limits.memory=32000Mi
deployer.ew-l0u.kubernetes.requests.cpu=1000m
deployer.ew-l0u.kubernetes.limits.cpu=8000m

######################## App specific #############################################################

###Filter
app.s2-l0u-filter.spring.cloud.stream.bindings.input.group=s2-l0u-filter
app.s2-l0u-filter.expression=(payload.missionId=='S2' and (payload.productFamily=='S2_AUX' or payload.productFamily=='EDRS_SESSION'))

### Router
app.s2-l0u-router.spring.cloud.stream.bindings.input.group=s2-l0u-router
app.s2-l0u-router.refresh-delay=30
app.s2-l0u-router.script=file:/etc/router-ew.groovy
deployer.s2-l0u-router.kubernetes.volume-mounts=[ {name: script, mountPath: '/etc/router-ew.groovy', subPath: 'router-ew.groovy' } ]
deployer.s2-l0u-router.kubernetes.volumes=[ {name: script, configmap: { name: s2-l0u-router-ew-script } } ]

### Catalog config
app.pw-l0u.catalog.url=http://rs-metadata-catalog-searchcontroller-svc.processing.svc.cluster.local:8080
app.pw-l0u.catalog.timeout=5

### Chain config
app.*.chain.name=s2-l0u
app.*.chain.version=<VERSION>

### Mongo config
app.pw-l0u.mongo.authenticationDatabase=admin
app.pw-l0u.mongo.database=s2-l0u-pw
app.pw-l0u.mongo.port=27017
app.pw-l0u.mongo.host=mongodb-0.mongodb-headless.database.svc.cluster.local

### Obs properties
app.*.obs.endpoint=https://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.*.obs.region=eu-west-0
app.*.obs.maxConcurrency=50
app.*.obs.maxThroughput=10
app.*.obs.minimumPartSize=5
app.*.obs.bucket.auxBucket=rs-s2-aux
app.*.obs.bucket.sessionBucket=rs-session-files
app.*.obs.bucket.sadBucket=rs-s2-aux
app.*.obs.bucket.hktmBucket=rs-s2-hktm

### Cleanup config
app.*.cleanup.localEnabled=true
app.*.cleanup.sharedEnabled=true
app.*.cleanup.hours=12

### Kafka Config
app.*.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.*.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.*.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.*.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.*.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.*.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.*.spring.cloud.stream.bindings.input.consumer.max-attempts=1

app.pw-l0u.spring.cloud.stream.bindings.input.group=s2-l0u-pw
app.ew-l0u.spring.cloud.stream.bindings.input.group=s2-l0u-ew

app.ew-l0u.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=3600000
app.ew-l0u.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=1

### Preparation worker
version.pw-l0u=<VERSION>
app.pw-l0u.spring.profiles.active=prod
deployer.pw-l0u.kubernetes.secret-refs=s2-l0u-pw
deployer.pw-l0u.kubernetes.podSecurityContext={runAsUser: 1000}

### Execution worker
version.ew-l0u=<VERSION>
app.ew-l0u.spring.profiles.active=prod
app.ew-l0u.ps2.sharedFolderRoot=/shared
deployer.ew-l0u.kubernetes.secret-refs=s2-l0u-ew
deployer.ew-l0u.kubernetes.podSecurityContext={runAsUser: 1000}
deployer.ew-l0u.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' } ]
deployer.ew-l0u.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l0-shared', storageClassName: 'ceph-fs' } } ]

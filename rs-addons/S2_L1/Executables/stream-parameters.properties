
######################## Deployer #################################################################

deployer.*.kubernetes.image-pull-policy=Always
deployer.*.kubernetes.namespace=processing

deployer.pw-l1s.kubernetes.liveness-probe-delay=10
deployer.pw-l1s.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.pw-l1s.kubernetes.liveness-probe-period=60
deployer.pw-l1s.kubernetes.liveness-probe-port=8080
deployer.pw-l1s.kubernetes.liveness-probe-timeout=60
deployer.pw-l1s.kubernetes.max-terminated-error-restarts=3
deployer.pw-l1s.kubernetes.readiness-probe-delay=60
deployer.pw-l1s.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.pw-l1s.kubernetes.readiness-probe-period=60
deployer.pw-l1s.kubernetes.readiness-probe-port=8080
deployer.pw-l1s.kubernetes.readiness-probe-timeout=20
deployer.pw-l1s.kubernetes.requests.memory=2000Mi
deployer.pw-l1s.kubernetes.requests.cpu=300m
deployer.pw-l1s.kubernetes.limits.memory=4000Mi
deployer.pw-l1s.kubernetes.limits.cpu=2000m

deployer.pw-l1c.kubernetes.liveness-probe-delay=10
deployer.pw-l1c.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.pw-l1c.kubernetes.liveness-probe-period=60
deployer.pw-l1c.kubernetes.liveness-probe-port=8080
deployer.pw-l1c.kubernetes.liveness-probe-timeout=60
deployer.pw-l1c.kubernetes.max-terminated-error-restarts=3
deployer.pw-l1c.kubernetes.readiness-probe-delay=60
deployer.pw-l1c.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.pw-l1c.kubernetes.readiness-probe-period=60
deployer.pw-l1c.kubernetes.readiness-probe-port=8080
deployer.pw-l1c.kubernetes.readiness-probe-timeout=20
deployer.pw-l1c.kubernetes.requests.memory=2000Mi
deployer.pw-l1c.kubernetes.requests.cpu=300m
deployer.pw-l1c.kubernetes.limits.memory=4000Mi
deployer.pw-l1c.kubernetes.limits.cpu=2000m

deployer.ew-l1s.kubernetes.liveness-probe-delay=10
deployer.ew-l1s.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.ew-l1s.kubernetes.liveness-probe-period=60
deployer.ew-l1s.kubernetes.liveness-probe-port=8080
deployer.ew-l1s.kubernetes.liveness-probe-timeout=60
deployer.ew-l1s.kubernetes.max-terminated-error-restarts=3
deployer.ew-l1s.kubernetes.readiness-probe-delay=60
deployer.ew-l1s.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.ew-l1s.kubernetes.readiness-probe-period=60
deployer.ew-l1s.kubernetes.readiness-probe-port=8080
deployer.ew-l1s.kubernetes.readiness-probe-timeout=20
deployer.ew-l1s.kubernetes.requests.memory=2000Mi
deployer.ew-l1s.kubernetes.requests.cpu=300m
deployer.ew-l1s.kubernetes.limits.memory=24000Mi
deployer.ew-l1s.kubernetes.limits.cpu=8000m

deployer.ew-l1ab.kubernetes.liveness-probe-delay=10
deployer.ew-l1ab.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.ew-l1ab.kubernetes.liveness-probe-period=60
deployer.ew-l1ab.kubernetes.liveness-probe-port=8080
deployer.ew-l1ab.kubernetes.liveness-probe-timeout=60
deployer.ew-l1ab.kubernetes.max-terminated-error-restarts=3
deployer.ew-l1ab.kubernetes.readiness-probe-delay=60
deployer.ew-l1ab.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.ew-l1ab.kubernetes.readiness-probe-period=60
deployer.ew-l1ab.kubernetes.readiness-probe-port=8080
deployer.ew-l1ab.kubernetes.readiness-probe-timeout=20
deployer.ew-l1ab.kubernetes.requests.memory=2000Mi
deployer.ew-l1ab.kubernetes.requests.cpu=300m
deployer.ew-l1ab.kubernetes.limits.memory=24000Mi
deployer.ew-l1ab.kubernetes.limits.cpu=8000m

deployer.ew-l1c.kubernetes.liveness-probe-delay=10
deployer.ew-l1c.kubernetes.liveness-probe-path=/actuator/health/liveness
deployer.ew-l1c.kubernetes.liveness-probe-period=60
deployer.ew-l1c.kubernetes.liveness-probe-port=8080
deployer.ew-l1c.kubernetes.liveness-probe-timeout=60
deployer.ew-l1c.kubernetes.max-terminated-error-restarts=3
deployer.ew-l1c.kubernetes.readiness-probe-delay=60
deployer.ew-l1c.kubernetes.readiness-probe-path=/actuator/health/readiness
deployer.ew-l1c.kubernetes.readiness-probe-period=60
deployer.ew-l1c.kubernetes.readiness-probe-port=8080
deployer.ew-l1c.kubernetes.readiness-probe-timeout=20
deployer.ew-l1c.kubernetes.requests.memory=2000Mi
deployer.ew-l1c.kubernetes.requests.cpu=300m
deployer.ew-l1c.kubernetes.limits.memory=24000Mi
deployer.ew-l1c.kubernetes.limits.cpu=8000m

####################### App specific #############################################################

###Filter
app.s2-l1-filter.spring.cloud.stream.bindings.input.group=s2-l1-filter
app.s2-l1-filter.expression=(payload.missionId=='S2' and (payload.productFamily=='S2_L0_DS' or payload.productFamily=='S2_L0_GR' or payload.productFamily=='S2_AUX'))

### Catalog config
app.pw-l1s.catalog.url=http://rs-metadata-catalog-searchcontroller-svc.processing.svc.cluster.local:8080
app.pw-l1s.catalog.timeout=5
app.pw-l1c.catalog.url=http://rs-metadata-catalog-searchcontroller-svc.processing.svc.cluster.local:8080
app.pw-l1c.catalog.timeout=5

### Chain config
app.pw-l1s.chain.name=s2-l1
app.pw-l1s.chain.version=<VERSION>
app.ew-l1s.chain.name=s2-l1
app.ew-l1s.chain.version=<VERSION>
app.ew-l1ab.chain.name=s2-l1
app.ew-l1ab.chain.version=<VERSION>
app.pw-l1c.chain.name=s2-l1
app.pw-l1c.chain.version=<VERSION>
app.ew-l1c.chain.name=s2-l1
app.ew-l1c.chain.version=<VERSION>

### Mongo config
app.pw-l1s.mongo.authenticationDatabase=admin
app.pw-l1s.mongo.database=s1-l1-pw-l1s
app.pw-l1s.mongo.port=27017
app.pw-l1s.mongo.host=mongodb-0.mongodb-headless.database.svc.cluster.local
app.pw-l1c.mongo.authenticationDatabase=admin
app.pw-l1c.mongo.database=s1-l1-pw-l1c
app.pw-l1c.mongo.port=27017
app.pw-l1c.mongo.host=mongodb-0.mongodb-headless.database.svc.cluster.local

### Obs properties
app.pw-l1s.obs.endpoint=https://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.pw-l1s.obs.region=eu-west-0
app.pw-l1s.obs.maxConcurrency=50
app.pw-l1s.obs.maxThroughput=10
app.pw-l1s.obs.minimumPartSize=5

app.ew-l1ab.obs.endpoint=https://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.ew-l1ab.obs.region=eu-west-0
app.ew-l1ab.obs.maxConcurrency=50
app.ew-l1ab.obs.maxThroughput=10
app.ew-l1ab.obs.minimumPartSize=5

app.pw-l1c.obs.endpoint=https://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.pw-l1c.obs.region=eu-west-0
app.pw-l1c.obs.maxConcurrency=50
app.pw-l1c.obs.maxThroughput=10
app.pw-l1c.obs.minimumPartSize=5

app.ew-l1c.obs.endpoint=https://oss.eu-west-0.prod-cloud-ocb.orange-business.com
app.ew-l1c.obs.region=eu-west-0
app.ew-l1c.obs.maxConcurrency=50
app.ew-l1c.obs.maxThroughput=10
app.ew-l1c.obs.minimumPartSize=5

### Kafka Config
app.pw-l1s.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.pw-l1s.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.pw-l1s.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.pw-l1s.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.pw-l1s.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.pw-l1s.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.pw-l1s.spring.cloud.stream.bindings.input.consumer.max-attempts=1
app.pw-l1s.spring.cloud.stream.bindings.input.group=s2-l1-pw-l1s

app.ew-l1s.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1s.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1s.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.ew-l1s.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.ew-l1s.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.ew-l1s.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.ew-l1s.spring.cloud.stream.bindings.input.consumer.max-attempts=1
app.ew-l1s.spring.cloud.stream.bindings.input.group=s2-l1-ew-l1s

app.ew-l1ab.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1ab.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1ab.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.ew-l1ab.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.ew-l1ab.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.ew-l1ab.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.ew-l1ab.spring.cloud.stream.bindings.input.consumer.max-attempts=1
app.ew-l1ab.spring.cloud.stream.bindings.input.group=s2-l1-ew-l1ab

app.pw-l1c.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.pw-l1c.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.pw-l1c.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.pw-l1c.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.pw-l1c.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.pw-l1c.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.pw-l1c.spring.cloud.stream.bindings.input.consumer.max-attempts=1
app.pw-l1c.spring.cloud.stream.bindings.input.group=s2-l1-pw-l1c

app.ew-l1c.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1c.spring.cloud.stream.kafka.binder.brokers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.ew-l1c.spring.cloud.stream.kafka.binder.auto-create-topics=true
app.ew-l1c.spring.cloud.stream.kafka.bindings.input.consumer.enable-dlq=true
app.ew-l1c.spring.cloud.stream.kafka.bindings.input.consumer.dlq-name=error-warning
app.ew-l1c.spring.cloud.stream.kafka.bindings.input.consumer.poll-timeout=5
app.ew-l1c.spring.cloud.stream.bindings.input.consumer.max-attempts=1
app.ew-l1c.spring.cloud.stream.bindings.input.group=s2-l1-ew-l1c

### Preparation worker L1S
version.pw-l1s=<VERSION>
app.pw-l1s.spring.profiles.active=prod
deployer.pw-l1s.kubernetes.secret-refs=[ s2-l1-mongo, s2-l1-obs ]
deployer.pw-l1s.kubernetes.pod-security-context.run-as-user=1000
app.pw-l1s.pw.auxBucket=rs-s2-aux
app.pw-l1s.pw.l0DSBucket=rs-s2-l0c
app.pw-l1s.pw.l0GRBucket=rs-s2-l0c
app.pw-l1s.pw.sharedFolderRoot=/shared
deployer.pw-l1s.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' } ]
deployer.pw-l1s.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l1-shared', storageClassName: 'ceph-fs' } } ]

### Execution worker L1S
version.ew-l1s=<VERSION>
app.ew-l1s.spring.profiles.active=prod
deployer.ew-l1s.kubernetes.secret-refs=s2-l1-obs
deployer.ew-l1s.kubernetes.pod-security-context.run-as-user=1001
app.ew-l1s.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=14400000
app.ew-l1s.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=1
app.ew-l1s.ew.auxBucket=rs-s2-aux
app.ew-l1s.ew.sharedFolderRoot=/shared
app.ew-l1s.ew.demFolderRoot=/dem
app.ew-l1s.ew.gridFolderRoot=/grid
app.ew-l1s.ew.maxParallelTasks=8
app.ew-l1s.ew.cleanup=true
deployer.ew-l1s.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' }, { name: dem, mountPath: '/dem' }, { name: grid, mountPath: '/grid' } ]
deployer.ew-l1s.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l1-shared', storageClassName: 'ceph-fs' } }, { name: dem, persistentVolumeClaim: { claimName: 's2-dem', storageClassName: 'ceph-fs' } }, { name: grid, persistentVolumeClaim: { claimName: 's2-grid', storageClassName: 'ceph-fs' } } ]

### Execution worker L1AB
version.ew-l1ab=<VERSION>
app.ew-l1ab.spring.profiles.active=prod
deployer.ew-l1ab.kubernetes.secret-refs=s2-l1-obs
deployer.ew-l1ab.kubernetes.pod-security-context.run-as-user=1001
app.ew-l1ab.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=14400000
app.ew-l1ab.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=1
app.ew-l1ab.ew.auxBucket=rs-s2-aux
app.ew-l1ab.ew.l1DSBucket=rs-s2-l1
app.ew-l1ab.ew.l1GRBucket=rs-s2-l1
app.ew-l1ab.ew.sharedFolderRoot=/shared
app.ew-l1ab.ew.demFolderRoot=/dem
app.ew-l1ab.ew.gridFolderRoot=/grid
app.ew-l1ab.ew.maxParallelTasks=8
app.ew-l1ab.ew.cleanup=true
deployer.ew-l1ab.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' }, { name: dem, mountPath: '/dem' }, { name: grid, mountPath: '/grid' } ]
deployer.ew-l1ab.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l1-shared', storageClassName: 'ceph-fs' } }, { name: dem, persistentVolumeClaim: { claimName: 's2-dem', storageClassName: 'ceph-fs' } }, { name: grid, persistentVolumeClaim: { claimName: 's2-grid', storageClassName: 'ceph-fs' } } ]

### Preparation worker L1C
version.pw-l1c=<VERSION>
app.pw-l1c.spring.profiles.active=prod
deployer.pw-l1c.kubernetes.secret-refs=[ s2-l1-mongo, s2-l1-obs ]
deployer.pw-l1c.kubernetes.pod-security-context.run-as-user=1000
app.pw-l1c.pw.auxBucket=rs-s2-aux
app.pw-l1c.pw.sharedFolderRoot=/shared
deployer.pw-l1c.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' } ]
deployer.pw-l1c.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l1-shared', storageClassName: 'ceph-fs' } } ]

### Execution worker L1C
version.ew-l1c=<VERSION>
app.ew-l1c.spring.profiles.active=prod
deployer.ew-l1c.kubernetes.secret-refs=s2-l1-obs
deployer.ew-l1c.kubernetes.pod-security-context.run-as-user=1001
app.ew-l1c.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=14400000
app.ew-l1c.spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=1
app.ew-l1c.ew.auxBucket=rs-s2-aux
app.ew-l1c.ew.l1DSBucket=rs-s2-l1
app.ew-l1c.ew.l1TLBucket=rs-s2-l1
app.ew-l1c.ew.sharedFolderRoot=/shared
app.ew-l1c.ew.demFolderRoot=/dem
app.ew-l1c.ew.gridFolderRoot=/grid
app.ew-l1c.ew.maxParallelTasks=8
app.ew-l1c.ew.cleanup=true
deployer.ew-l1c.kubernetes.volume-mounts=[ { name: shared, mountPath: '/shared' }, { name: dem, mountPath: '/dem' }, { name: grid, mountPath: '/grid' } ]
deployer.ew-l1c.kubernetes.volumes=[ { name: shared, persistentVolumeClaim: { claimName: 's2-l1-shared', storageClassName: 'ceph-fs' } }, { name: dem, persistentVolumeClaim: { claimName: 's2-dem', storageClassName: 'ceph-fs' } }, { name: grid, persistentVolumeClaim: { claimName: 's2-grid', storageClassName: 'ceph-fs' } } ]
